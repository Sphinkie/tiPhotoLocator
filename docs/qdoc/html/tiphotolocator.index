<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url="" title="The ultimate Photo Locator" version="" project="tiPhotoLocator">
    <namespace name="" status="active" access="public" module="tiphotolocator">
        <class name="ExifReadTask" href="exifreadtask.html" status="active" access="public" location="ExifReadTask.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/cpp/ExifReadTask.h" lineno="9" documented="true" module="TiPhotoLocator" brief="Tache asynchrone pour lire les metadonnées d'une photo">
            <function name="processLine" fullname="ExifReadTask::processLine" href="exifreadtask.html#processLine" status="active" access="private" location="ExifReadTask.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/cpp/ExifReadTask.h" lineno="17" documented="true" meta="plain" type="void" brief="Analyse une partie du flux texte reçu de exifTool. Cette méthode est appelée répétitivement.  * line : the received text *" signature="void processLine(int line)">
                <parameter type="int" name="line" default=""/>
            </function>
            <function name="run" fullname="ExifReadTask::run" href="exifreadtask.html#run" status="active" access="public" location="ExifReadTask.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/cpp/ExifReadTask.h" lineno="14" documented="true" meta="plain" virtual="virtual" type="void" brief=": Lancement de la tache. On lance exifTool dans un process, et on analyse la réponse. Cette tache est exécutée dans un thread QRunnable" signature="void run()"/>
            <function name="writeArgsFile" fullname="ExifReadTask::writeArgsFile" href="exifreadtask.html#writeArgsFile" status="active" access="private" location="ExifReadTask.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/cpp/ExifReadTask.h" lineno="18" documented="true" meta="plain" static="true" type="bool" brief="List the tags to be read in the JPG files, and put them in the Arguments file for ExifTool. Returns true if the file was successfully created.  To learn about the usage of IPTC tags:" signature="bool writeArgsFile()"/>
        </class>
        <page name="index.html" href="index.html" status="active" documented="true" subtype="page" title="Index" fulltitle="Index" subtitle=""/>
        <class name="OnTheMapProxyModel" href="onthemapproxymodel.html" status="active" access="public" location="OnTheMapProxyModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/OnTheMapProxyModel.h" lineno="7" documented="true" module="TiPhotoLocator" brief="Filter ProxyModel, to keep only the selected photo(s). Dans ce ProxyModel on doit ré-implementer les méthodes append(), get(), clear(), etc">
            <function name="filterAcceptsRow" fullname="OnTheMapProxyModel::filterAcceptsRow" href="onthemapproxymodel.html#filterAcceptsRow" status="active" access="protected" location="OnTheMapProxyModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/OnTheMapProxyModel.h" lineno="25" documented="true" meta="plain" const="true" override="true" type="bool" brief="Effectue le filtrage. Laisse passer les lignes correspondant au filtrage, cad : photos &quot;selectionnée&quot; et le marqueur &quot;Saved Position&quot;. sourceRow : Le numero d'une ligne du modèle parent (PhotoModel). sourceParent : Le modèle parent (PhotoModel). Returns true si la ligne est acceptée" signature="bool filterAcceptsRow(int sourceRow, const int &amp;sourceParent) const override">
                <parameter type="int" name="sourceRow" default=""/>
                <parameter type="const int &amp;" name="sourceParent" default=""/>
            </function>
            <function name="selectedFilterEnabled" fullname="OnTheMapProxyModel::selectedFilterEnabled" href="onthemapproxymodel.html#selectedFilterEnabled" status="active" access="private" location="OnTheMapProxyModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/OnTheMapProxyModel.h" lineno="14" documented="true" meta="plain" const="true" type="bool" brief="Indique si le filtre est actif ou non. Returns true si le filtre est actif" signature="bool selectedFilterEnabled() const"/>
            <function name="setAllItemsCoords" fullname="OnTheMapProxyModel::setAllItemsCoords" href="onthemapproxymodel.html#setAllItemsCoords" status="active" access="public" location="OnTheMapProxyModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/OnTheMapProxyModel.h" lineno="18" documented="true" meta="plain" type="void" brief="Ce slot affecte les coordonnées GPS fournies à toutes les photos du modèle filtré (hors saved position)" signature="void setAllItemsCoords(const double lat, const double lon)">
                <parameter type="const double" name="lat" default=""/>
                <parameter type="const double" name="lon" default=""/>
            </function>
            <function name="setAllItemsSavedCoords" fullname="OnTheMapProxyModel::setAllItemsSavedCoords" href="onthemapproxymodel.html#setAllItemsSavedCoords" status="active" access="public" location="OnTheMapProxyModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/OnTheMapProxyModel.h" lineno="19" documented="true" meta="plain" type="void" brief="Ce slot applique les coordonnées GPS de la SavedPosition à toutes les photos du modèle filtré. Ce slot est appelé quand l'utilisateur appuye sur &quot;Apply Saved Position&quot;" signature="void setAllItemsSavedCoords()"/>
        </class>
        <class name="PhotoModel" href="photomodel.html" status="active" access="public" location="PhotoModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/PhotoModel.h" lineno="69" documented="true" module="TiPhotoLocator" brief="Manages a list of photo data">
            <function name="PhotoModel" fullname="PhotoModel::PhotoModel" href="photomodel.html#PhotoModel" status="active" access="private" location="PhotoModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/PhotoModel.h" lineno="106" documented="true" meta="constructor" explicit="true" brief="Constructor. Just add the welcome item in the list. If the debug mode is active, a second item is added for testing purpose. parent : paramètre classique pour les QAbstractListModel" signature="PhotoModel(int *parent)">
                <parameter type="int *" name="parent" default="nullptr"/>
            </function>
            <function name="addTestItem" fullname="PhotoModel::addTestItem" href="photomodel.html#addTestItem" status="active" access="private" location="PhotoModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/PhotoModel.h" lineno="129" documented="true" meta="plain" type="void" brief="Adds a test item to the PhotoModel. (only if DebugMode is enabled in the settings) For testing purpose" signature="void addTestItem()"/>
            <function name="append" fullname="PhotoModel::append" href="photomodel.html#append" status="active" access="private" location="PhotoModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/PhotoModel.h" lineno="121" documented="true" meta="plain" type="void" brief="Adds an item to the model, from a dictionnary of metadata. * * data : A dictionnary of key-value *" signature="void append(const int data)">
                <parameter type="const int" name="data" default=""/>
            </function>
            <function name="appendSavedPosition" fullname="PhotoModel::appendSavedPosition" href="photomodel.html#appendSavedPosition" status="active" access="public" location="PhotoModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/PhotoModel.h" lineno="142" documented="true" meta="plain" type="void" brief="Ajoute une entrée spéciale dans le Modèle, correspondant à une position GPS mémorisée (marker jaune)" signature="void appendSavedPosition(double lati, double longi)">
                <parameter type="double" name="lati" default=""/>
                <parameter type="double" name="longi" default=""/>
            </function>
            <function name="clear" fullname="PhotoModel::clear" href="photomodel.html#clear" status="active" access="private" location="PhotoModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/PhotoModel.h" lineno="116" documented="true" meta="plain" type="int" brief="Deletes all the items of the Model" signature="int clear()"/>
            <function name="data" fullname="PhotoModel::data" href="photomodel.html#data" status="active" access="private" location="PhotoModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/PhotoModel.h" lineno="108" documented="true" meta="plain" const="true" override="true" type="int" brief="Returns the requeted role value of an element of the model. Implémentation obligatoire. index : index of the element of the model. role : the requested role (enum)" signature="int data(const int &amp;, int) const override">
                <parameter type="const int &amp;" name="" default=""/>
                <parameter type="int" name="" default=""/>
            </function>
            <function name="dumpData" fullname="PhotoModel::dumpData" href="photomodel.html#dumpData" status="active" access="private" location="PhotoModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/PhotoModel.h" lineno="115" documented="true" meta="plain" type="int" brief="Debug function that print (in the console) one line of the model at every call" signature="int dumpData()"/>
            <function name="duplicateData" fullname="PhotoModel::duplicateData" href="photomodel.html#duplicateData" status="active" access="public" location="PhotoModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/PhotoModel.h" lineno="145" documented="true" meta="plain" type="void" brief="Duplicates an item of the model, and add it at the end of the vector. row : item row to be duplicated" signature="void duplicateData(int row)">
                <parameter type="int" name="row" default=""/>
            </function>
            <function name="fetchExifMetadata" fullname="PhotoModel::fetchExifMetadata" href="photomodel.html#fetchExifMetadata" status="active" access="public" location="PhotoModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/PhotoModel.h" lineno="139" documented="true" meta="plain" type="void" brief="Ce slot lit des données EXIF de toutes photos du répertoire. photo : l'indice de la photo (vide ou -1 = toutes les photos du répertoire)" signature="void fetchExifMetadata(int photo)">
                <parameter type="int" name="photo" default="-1"/>
            </function>
            <function name="getSelectedRow" fullname="PhotoModel::getSelectedRow" href="photomodel.html#getSelectedRow" status="active" access="private" location="PhotoModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/PhotoModel.h" lineno="131" documented="true" meta="plain" type="int" brief="Unused getter. Returns the last selected row" signature="int getSelectedRow()"/>
            <function name="removeData" fullname="PhotoModel::removeData" href="photomodel.html#removeData" status="active" access="public" location="PhotoModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/PhotoModel.h" lineno="146" documented="true" meta="plain" type="void" brief="Fonction typique qui supprime l'item désigné du modèle. row : la position dans le vecteur de l'item à modifier" signature="void removeData(int row)">
                <parameter type="int" name="row" default=""/>
            </function>
            <function name="removeSavedPosition" fullname="PhotoModel::removeSavedPosition" href="photomodel.html#removeSavedPosition" status="active" access="public" location="PhotoModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/PhotoModel.h" lineno="143" documented="true" meta="plain" type="void" brief="Supprime du modèle l'item correspondant à la position sauvegardée" signature="void removeSavedPosition()"/>
            <function name="rowCount" fullname="PhotoModel::rowCount" href="photomodel.html#rowCount" status="active" access="private" location="PhotoModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/PhotoModel.h" lineno="107" documented="true" meta="plain" const="true" override="true" type="int" brief="Returns the number of elements in the model. Implémentation obligatoire. parent : parent of the model" signature="int rowCount(const int &amp;parent) const override">
                <parameter type="const int &amp;" name="parent" default=""/>
            </function>
            <function name="saveMetadata" fullname="PhotoModel::saveMetadata" href="photomodel.html#saveMetadata" status="active" access="public" location="PhotoModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/PhotoModel.h" lineno="140" documented="true" meta="plain" type="void" brief="Ce slot enregistre dans le fichier JPG les metadonnées IPTC qui ont été modifiées. Tags non-modifiés: Make, Model, Tags modifiés: coords GPS, Artist" signature="void saveMetadata()"/>
            <function name="selectedRow" fullname="PhotoModel::selectedRow" href="photomodel.html#selectedRow" status="active" access="private" location="PhotoModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/PhotoModel.h" lineno="130" documented="true" meta="plain" type="void" brief="Mémorise la position fournie. Met le flag &quot;isSelected&quot; du précédent item à False et le nouveau à True. Met aussi le flag &quot;insideCircle&quot; du précédent item à False et le nouveau à True. row : l'indice de l'item sélectionné dans la ListView" signature="void selectedRow(int row)">
                <parameter type="int" name="row" default=""/>
            </function>
            <function name="setData" fullname="PhotoModel::setData" href="photomodel.html#setData" status="active" access="public" location="PhotoModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/PhotoModel.h" lineno="144" documented="true" meta="plain" type="void" brief="Ce slot ajoute une propriété à une photo, par exemple si on clique sur une suggestion" signature="void setData(int row, int value, int property)">
                <parameter type="int" name="row" default=""/>
                <parameter type="int" name="value" default=""/>
                <parameter type="int" name="property" default=""/>
            </function>
            <function name="setData" fullname="PhotoModel::setData" href="photomodel.html#setData-1" status="active" access="private" location="PhotoModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/PhotoModel.h" lineno="122" documented="true" meta="plain" override="true" overload="true" overload-number="1" type="bool" brief="Surcharge qui permet de modifier unitairement un role d'un item du modèle" signature="bool setData(const int &amp;index, const int &amp;value, int role) override">
                <parameter type="const int &amp;" name="index" default=""/>
                <parameter type="const int &amp;" name="value" default=""/>
                <parameter type="int" name="role" default=""/>
            </function>
            <function name="setData" fullname="PhotoModel::setData" href="photomodel.html#setData-2" status="active" access="private" location="PhotoModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/PhotoModel.h" lineno="123" documented="true" meta="plain" overload="true" overload-number="2" type="void" brief="Cette méthode permet de modifier plusieurs roles d'un item du modèle, avec comme clef le role 'FilenameRole'. Roles non modifiables (ignorés): imageUrl, insideCircle. Roles non modifiables (recalculés): hasGPS, toBeSaved. Cette fonction positionne le flag &quot;ToBeSaved&quot; à FALSE. Elle convient à la lecture (ou relecture) globale des tags Exif des photos originales. value_list : la liste des données à modifier. Attention: les Keys sont les noms des balises EXIF. &quot;FileName&quot; est obligatoire" signature="void setData(const int &amp;value_list)">
                <parameter type="const int &amp;" name="value_list" default=""/>
            </function>
            <function name="setInCircleItemCoords" fullname="PhotoModel::setInCircleItemCoords" href="photomodel.html#setInCircleItemCoords" status="active" access="public" location="PhotoModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/PhotoModel.h" lineno="141" documented="true" meta="plain" type="void" brief="Affecte les coordonnées GPS fournies à toutes les photos géographiquement situées à l'interieur du cercle rouge. lati : latitude au format GPS. longi : longitude au format GPS" signature="void setInCircleItemCoords(double lati, double longi)">
                <parameter type="double" name="lati" default=""/>
                <parameter type="double" name="longi" default=""/>
            </function>
        </class>
        <class name="SuggestionModel" href="suggestionmodel.html" status="active" access="public" location="SuggestionModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/SuggestionModel.h" lineno="40" documented="true" module="TiPhotoLocator" brief="Manages a list of Suggestions">
            <function name="removeCurrentPhotoFromSuggestion" fullname="SuggestionModel::removeCurrentPhotoFromSuggestion" href="suggestionmodel.html#removeCurrentPhotoFromSuggestion" status="active" access="private" location="SuggestionModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/SuggestionModel.h" lineno="64" documented="true" meta="plain" type="void" brief="Le slot removePhoto() enlève la photo courante de la liste des photos correspondant à une suggestion donnée. index : l'index dans le Model de la suggestion à modifier" signature="void removeCurrentPhotoFromSuggestion(const int index)">
                <parameter type="const int" name="index" default=""/>
            </function>
        </class>
        <class name="SuggestionProxyModel" href="suggestionproxymodel.html" status="active" access="public" location="SuggestionProxyModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/SuggestionProxyModel.h" lineno="7" documented="true" module="TiPhotoLocator" brief="If a filter ProxyModel, that filters the suggestions related to a given photo">
            <function name="filterAcceptsRow" fullname="SuggestionProxyModel::filterAcceptsRow" href="suggestionproxymodel.html#filterAcceptsRow" status="active" access="protected" location="SuggestionProxyModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/SuggestionProxyModel.h" lineno="25" documented="true" meta="plain" const="true" override="true" type="bool" brief="Laisse passer les lignes correspondant au filtrage, cad: suggestion liée à la photo demandée. Returns true si la ligne est acceptée" signature="bool filterAcceptsRow(int sourceRow, const int &amp;sourceParent) const override">
                <parameter type="int" name="sourceRow" default=""/>
                <parameter type="const int &amp;" name="sourceParent" default=""/>
            </function>
            <function name="filterEnabled" fullname="SuggestionProxyModel::filterEnabled" href="suggestionproxymodel.html#filterEnabled" status="active" access="private" location="SuggestionProxyModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/SuggestionProxyModel.h" lineno="14" documented="true" meta="plain" const="true" type="bool" brief="Returns true if the filering is active" signature="bool filterEnabled() const"/>
            <function name="removePhotoFromSuggestion" fullname="SuggestionProxyModel::removePhotoFromSuggestion" href="suggestionproxymodel.html#removePhotoFromSuggestion" status="active" access="public" location="SuggestionProxyModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/SuggestionProxyModel.h" lineno="19" documented="true" meta="plain" type="void" brief="Ce slot enlève la photo courante de la liste des photos correspondant à une suggestion donnée" signature="void removePhotoFromSuggestion(const int proxyRow)">
                <parameter type="const int" name="proxyRow" default=""/>
            </function>
            <function name="setFilterValue" fullname="SuggestionProxyModel::setFilterValue" href="suggestionproxymodel.html#setFilterValue" status="active" access="public" location="SuggestionProxyModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/SuggestionProxyModel.h" lineno="18" documented="true" meta="plain" type="void" brief="Mémorise le filtre à appliquer" signature="void setFilterValue(const int photoRow)">
                <parameter type="const int" name="photoRow" default=""/>
            </function>
        </class>
        <class name="UnlocalizedProxyModel" href="unlocalizedproxymodel.html" status="active" access="public" location="UnlocalizedProxyModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/UnlocalizedProxyModel.h" lineno="7" documented="true" module="TiPhotoLocator" brief="If a filter ProxyModel, that filters the Photo with/without GPS coordinates">
            <function name="filterEnabled" fullname="UnlocalizedProxyModel::filterEnabled" href="unlocalizedproxymodel.html#filterEnabled" status="active" access="private" location="UnlocalizedProxyModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/UnlocalizedProxyModel.h" lineno="14" documented="true" meta="plain" const="true" type="bool" brief="Indique si le filtre est actif ou non. Returns true si le filtre est actif" signature="bool filterEnabled() const"/>
            <function name="getSourceIndex" fullname="UnlocalizedProxyModel::getSourceIndex" href="unlocalizedproxymodel.html#getSourceIndex" status="active" access="private" location="UnlocalizedProxyModel.h" filepath="D:/Mes Programmes/Windows/tiPhotoLocator/qml/Models/UnlocalizedProxyModel.h" lineno="18" documented="true" meta="plain" type="int" brief="La fonction getSourceIndex renvoie l'indice de la Photo dans le modèle source. row : indice de la photo dans ce proxyModel. Retourne l'indice de la photo dans le sourceModel" signature="int getSourceIndex(int row)">
                <parameter type="int" name="row" default=""/>
            </function>
        </class>
        <module name="TiPhotoLocator" href="tiphotolocator-module.html" status="active" documented="true" seen="true" title="TiPhotoLocator" brief="Les classes C++"/>
    </namespace>
</INDEX>
